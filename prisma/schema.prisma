generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int        @id @default(autoincrement())
  username String     @unique
  password String
  events   Event[]
  attender Attendee[]
  reactions Reaction[]
}

model Event {
  id          Int        @id @default(autoincrement())
  description String
  picture     String
  location    String
  creatorId   Int
  creator     User       @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  attendees   Attendee[]
  File        File[]
  Reaction    Reaction[]
}

model Attendee {
  id      Int   @id @default(autoincrement())
  userId  Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  eventId Int
  event   Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId], name: "userOncePerEvent")
}

model File {
  id           Int    @id @default(autoincrement())
  fileLocation String
  eventId      Int
  event        Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model Reaction {
  id                Int       @id @default(autoincrement())
  userId            Int
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  eventId           Int
  event             Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  type              String
  message           String?
  availibilityDate DateTime?
  createdAt        DateTime
}
